# ./.tmuxinator.yml

name: localization
root: ~/

# Optional tmux socket
# socket_name: foo

# Note that the pre and post options have been deprecated and will be replaced by
# project hooks.

# Project hooks

# Runs on project start, always
# on_project_start: command

# Run on project start, the first time
# on_project_first_start: command

# Run on project start, after the first time
# on_project_restart: command

# Run on project exit ( detaching from tmux session )
# on_project_exit: command

# Run on project stop
# on_project_stop: command

# Runs in each window and pane before window/pane specific commands. Useful for setting up interpreter versions.
# pre_window: rbenv shell 2.0.0-p247

# Pass command line options to tmux. Useful for specifying a different tmux.conf.
# tmux_options: -f ~/.tmux.mac.conf

# Change the command to call tmux.  This can be used by derivatives/wrappers like byobu.
# tmux_command: byobu

# Specifies (by name or index) which window will be selected on project startup. If not set, the first window is used.
# startup_window: editor

# Specifies (by index) which pane of the specified window will be selected on project startup. If not set, the first pane is used.
# startup_pane: 1

# Controls whether the tmux session should be attached to automatically. Defaults to true.
# attach: false

windows:
  - editor:
      layout: tiled
      # Synchronize all panes of this window, can be enabled before or after the pane commands run.
      # 'before' represents legacy functionality and will be deprecated in a future release, in favour of 'after'
      # synchronize: after
      panes:
        - velodyne:
          - cd /home/sush/mfi/SLAM_toolbox_with_EKF_odom/ros2_ws
          - source install/setup.bash
          - ros2 launch velodyne velodyne-all-nodes-VLP16-launch.py
        # - repub_velo:
        #   - source install/setup.bash
        #   - ros2 run repub_velo repub_velo
        - slam_tf2:
          - cd /home/sush/mfi/SLAM_toolbox_with_EKF_odom/ros2_ws
          - python3 sleep/sleep_short.py
          - source install/setup.bash
          - ros2 launch slam_toolbox_tf2 all_static.launch.py
        - kiss_icp:
          - cd /home/sush/mfi/SLAM_toolbox_with_EKF_odom/ros2_ws
          - python3 sleep/sleep_short.py
          - source install/setup.bash
          - ros2 launch kiss_icp odometry.launch.py topic:=/velodyne_points
        - visual_odom:
          - cd /home/sush/mfi/SLAM_toolbox_with_EKF_odom/ros2_ws
          - python3 sleep/sleep_short.py
          - source install/setup.bash
          - ros2 launch realsense2_camera rs_t265_launch.py
        - RVIZ:
          - cd /home/sush/mfi/SLAM_toolbox_with_EKF_odom/ros2_ws
          - source install/setup.bash
          # - rviz2
          - ros2 launch neo_localization2 rviz.launch.py
        - AMCL:
          - cd /home/sush/mfi/SLAM_toolbox_with_EKF_odom/ros2_ws
          - python3 sleep/sleep.py
          - source install/setup.bash
          - ros2 launch neo_localization2 neo_loc.launch.py map:=/home/sush/mfi/ros2_ws/maps+frames_single_odom_source/full_map_two.yaml params_file:=/home/sush/mfi/ros2_ws/nav2_params.yaml use_sim_time:=false
  - server: bundle exec rails s
  - logs: tail -f log/development.log
